#summary Manual index

=Index=

...TODO...

=Navigating the bitmap=

If you get lost, restore view with Home key.

To move around, hold middle (roll) button and move mouse or hold space and move mouse.

Use arrow keys.

To zoom, roll middle button or use *+* and *-* on keyboard.

=Drawing & colors=

To plot/draw, use left or right mouse button (primary and secondary color).

To select new colors use right or left mouse on the palette or press *0*-*9*/*A*-*F* for quick selection of primary color.

To swap primary and secondary colors use *X* key.

==Palette window==

The palette (currently named VIC-II) shows your primary and secondary color selection. You can select primary/secondary color directly from the window with the left and right mouse buttons respectively. The primary color will be marked with a square and the secondary color will be marked with an X.

The secondary color got two extra features: It will be used as the background fill when cutting out a selection. It will be used as the background mask when performing a masked paste

=Undo & Redo=
Undo is your friend!

Undo and redo history is kept in RAM for 100 iterations and even works over mode change. 

Undo and Redo is found under the Edit menu or by keyboard *CTRL*+*Z* and *CTRL*+*Y*.

=Select=
Select is the first step required for many tools.

To manually select an area, hit the *M* key and then drag with the mouse. Tip: If you want to select an area larger than your visible screen, you can use the arrow keys to move.

To select everything, press *CTRL*+*A*.

To select the current cell press *Shift*+*C*.

To deselect or cancel any selection hit *ESC* or press *CTRL*+*D*.

===Auto-select Cell===
Available as an option under the Edit menu. This feature is handy when working on block graphics like chars or sprites as it will automatically select the current cell upon mouse hovering. The auto-selection can temporary be overridden with any of the other select methods.

===Snap selection to Cell===
Available as an option under the Edit menu. This feature will align any selection or paste operations to complete cells. Many operations can only be done successfully on complete cell boundaries.

==Copy==
Available as an option under the Edit menu or by pressing *CTRL*+*C*.

A copied section is converted to RGB and placed on the Windows clipboard. This makes cross application copy and paste possible.

==Cut==
Available as an option under the Edit menu or by pressing *CTRL*+*X*.

Cut behaves much as copy except that the secondary color is used to fill the the selected area.

==Paste==

===Masked paste===


=Preview window=

==Aspect ratio==

=Cell window=

==Indexed vs Global==

==Lock==

=New window=

=File formats=

===GPX===
This is the PC file format used by Pixcen. The format saves the full state of the current project including back buffers, undo history and any meta-data applicable. This is meant to be the day to day working format but it's not suitable for exporting data C64 as it's a compressed 32 bit format.

===PNG/BMP/GIF/JPG===
Export and import of these native PC formats is supported via Windows GDI. 

Pixcen is designed to be able to export and import bitmaps without any loss but be aware that there could be bugs. Also, BMP bitmaps exported from other tools like [http://csdb.dk/release/?id=86776 Project One] could use a different palette and that can mean Pixcen will not be able to recreate the bitmap correctly. In this case, using a native C64 format like Koala is a safer way to move pictures between applications.

A word of warning, JPG is a destructive format and should not be used for anything but pure export.

===Koala===

===Advanced Art Studio===

===Cenimate===

===C64 Exe===
This format is export only and is only available under certain  conditions. For bitmap modes the resolutions must be full screen. For character mode the resolution must be full screen and the character count must not exceed 256.

The produced file will be compressed with [http://csdb.dk/release/?id=109317 Byte Boozer] and executable on C64.

==Binary & PRG formats==
The following low level export formats exists in two versions: binary and PRG. Binary is suitable for cross development as many cross development tools such as assemblers can include binary data directly (a binary file could also be treated as a SEQ or USR-file on C64). PRG is the more common native C64 format, it's a binary prefixed 16 bit load address. When exporting any of the p??? formats a dialog will ask for the address to prefix.

===Bitmap RAM (map/pmap)===
This format is currently export only and is always available. The bitmap RAM represents the raw bitmap per row of cells from left to right, top to bottom, 8 bytes per cell. Likewise, for sprites this means rows of sprites from left to right, top to bottom, 64 bytes per cell where the last byte always is zero. In character mode this is the non indexed bitmap just like bitmap mode and you might want to consider saving an indexed char map & indexed screen instead.

===Screen RAM (scr/pscr)===
This format is currently export only and is available for bitmap mode. The screen RAM contains the color data for mask 01 and 10 in bitmap multi color mode or mask 0 and 1 in bitmap single color mode. The colors are encoded as high nibble and low nibble, one byte per cell from left to right, top to bottom. This data is commonly loaded at address $0400 on the C64.

===Color RAM (col/pcol)===
This format is currently export only and is always available. The color RAM contains the color data for mask 11 in bitmap/char multi color mode or mask 1 in single color char mode. The colors are encoded as low nibble with the high nibble always set to zero, one byte per cell from left to right, top to bottom. This data is commonly used at address $D800 on the C64.

For sprite mode the color ram represents the individual sprite color set at $D027-$D02E.

===Indexed char map (imap/pimap) & Index screen (iscr/piscr)===
These formats are currently export only and available for char mode if the unique character count is no more than 256. The indexed map is a set of all unique characters represented in the bitmap while the index screen contains the index pointers to these unique chars. The map will be saved in chunks of 8 bytes in the order they appear in the original map with the possible exception if index $20 (offset $100) that will hold the first empty character discovered. The index screen will be saved from left to right, top to bottom. When exporting the indexed map and index screen it's important not to make any alterations to the image between the two exports as the generated data could become out of sync.

==Load==

==Save==


=Bitmap mode=

=Character mode=

=Sprite mode=

=Unrestricted mode=